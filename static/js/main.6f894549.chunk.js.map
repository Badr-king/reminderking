{"version":3,"sources":["Types.js","App.js","Actions/index.js","reportWebVitals.js","redusers/index.js","index.js"],"names":["ADD_REMINDER","REMOVE_REMINDER","CLEAR_REMINDERS","App","state","text","date","Date","render_Reminders","reminders","props","className","map","reminder","moment","fromNow","onClick","remove_Reminder","id","src","type","value","this","placeholder","onChange","e","setState","target","placeholderText","selected","showTimeSelect","timeFormat","dateFormat","timeCaption","add_Reminder","alert","clear_Reminder","Component","connect","action","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","read_cookie","Math","random","bake_cookie","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f894549.chunk.js","sourcesContent":["export const ADD_REMINDER =\" ADD_REMINDER\";\r\nexport const REMOVE_REMINDER =\" REMOVE_REMINDER\";\r\nexport const CLEAR_REMINDERS =\" REMOVE_REMINDERS\";\r\n","\nimport React, { Component } from 'react'\nimport DataPicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nimport {add_Reminder,remove_Reminder,clear_Reminder} from './Actions'\nimport {connect} from 'react-redux';\nimport moment from 'moment'\nclass App extends Component {\n  state ={\n    text: '',\n    date: new Date()\n  }\n  render_Reminders=()=>{\n    const {reminders}=this.props;\n    return(\n      <ul className=\"list-group\">\n        {\n         reminders.map(reminder=>{\n          return(\n             <li  key={reminder.id}className='list-group-item'>\n                 <div>{reminder.text}</div>\n                 <div>{moment(new Date(reminder.date)).fromNow()}</div>\n                 <div className=\"closeIcon btn btn-danger\" onClick={()=>this.props.remove_Reminder(reminder.id)}>X</div>\n    \n             </li>\n            )\n        }) \n        }\n\n      </ul>\n     )\n    \n    \n  }\n  render() {\n    return (\n      <div className=\"App\">\n          <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ5efqwi6uqPW98zPQANi8V4DE5tCKsdIw5tA&usqp=CAU\"/>\n          <div className=\"reminder-title\">\n               <h2>What should U Do ?</h2>\n          </div>\n        <input\n               className=\"form-control\"\n               type=\"text\"\n               value={this.state.text}\n               placeholder=\"Enter what U think ... ?\"\n               onChange={(e)=>this.setState({text:e.target.value})}\n               \n        />   \n        <DataPicker\n        className=\"form-control\"\n        placeholderText=\"Enter Date\"\n        value={this.state.date}\n        selected={this.state.date}\n        onChange={(date)=>{this.setState({date:date})}}\n        showTimeSelect\n        timeFormat=\"HH:mm\"\n        dateFormat= \"d MMMM, yyyy h:mm aa\"\n        timeCaption=\"time\"\n        />\n        <button \n          onClick={()=>{\n            if(this.state.text&&this.state.date){\n            this.props.add_Reminder(this.state.text,this.state.date)\n            this.setState({text:\"\",date:\"\"})}\n            else{\n              alert(\"please write task\")\n            }      \n          }}\n            className=\"btn btn-primary btn-block\">\n            Add Reminder\n        </button>\n        {this.render_Reminders()}\n  \n        <button\n          onClick={\n            ()=>this.props.clear_Reminder()} \n          className=\"btn btn-danger btn-block\">\n          Clear Reminders\n        </button>\n  \n     \n      </div>\n    );\n  }\n}\nexport default connect(state=>{\n  return{\n    reminders:state\n  }\n},{\n  add_Reminder,\n  remove_Reminder,\n  clear_Reminder\n\n}\n\n)(App)\n\n","import {ADD_REMINDER, CLEAR_REMINDERS, REMOVE_REMINDER} from '../Types';\r\n\r\nexport const add_Reminder=(text,date)=>{\r\n    const action ={\r\n        type: ADD_REMINDER,\r\n        text,\r\n        date\r\n    }\r\n    console.log(\"Add\",action)\r\n    return action\r\n}\r\n\r\nexport const remove_Reminder=(id)=>{\r\n    const action ={\r\n        type: REMOVE_REMINDER,\r\n        id\r\n    }\r\n    console.log(\"Remove\",action)\r\n    return action\r\n}\r\nexport const clear_Reminder=()=>{\r\n    const action ={\r\n        type: CLEAR_REMINDERS\r\n    }\r\n    \r\n    return action\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_REMINDER, REMOVE_REMINDER,CLEAR_REMINDERS} from \"../Types\";\r\nimport {bake_cookie,read_cookie} from 'sfcookies'\r\n\r\nconst reminders =(state=[],action)=>{\r\n    let reminders =[];\r\n    state= read_cookie('reminders')\r\n    if(action.type=== ADD_REMINDER){\r\n        reminders=[...state,{text:action.text,date:action.date,id:Math.random()}]\r\n        bake_cookie(\"reminders\",reminders)\r\n        console.log(\"frome reducer\",reminders)\r\n        return reminders \r\n    }\r\n    else if(action.type===REMOVE_REMINDER){\r\n        bake_cookie(\"reminders\",reminders)\r\n        reminders=state.filter(reminder=>reminder.id!== action.id)\r\n        return reminders\r\n    }\r\n    else if(action.type === CLEAR_REMINDERS){\r\n        reminders=[]\r\n        bake_cookie(\"reminders\",reminders)\r\n        return reminders\r\n    }\r\n    else{\r\n        return state\r\n    }\r\n}\r\nexport default reminders","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './redusers/index' \nimport reminders from './redusers/index';\nconst store = createStore(reminders)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}